import { AfterContentInit, AfterViewInit, EventEmitter, OnDestroy, Renderer2, TemplateRef } from '@angular/core';
import { NgxHmCarouselItemDirective } from './ngx-hm-carousel-item.directive';
export declare class NgxHmCarouselComponent implements AfterViewInit, AfterContentInit, OnDestroy {
    private platformId;
    private _renderer;
    parentChild: any;
    private btnPrev;
    private btnNext;
    items: NgxHmCarouselItemDirective[];
    contentPrev: TemplateRef<any>;
    contentNext: TemplateRef<any>;
    dotElm: TemplateRef<any>;
    progressElm: TemplateRef<any>;
    infinite: boolean;
    mourseEnable: boolean;
    speed: number;
    delay: number;
    direction: 'left' | 'right';
    private _showNum;
    private isAutoNum;
    showNum: number | 'auto';
    scrollNum: number;
    isDragMany: boolean;
    private _viewIndex;
    currentIndex: number;
    private _autoplay;
    autoplay: boolean;
    indexChanged: EventEmitter<{}>;
    private _porgressWidth;
    progressWidth: number;
    private rootElm;
    private containerElm;
    private itemsElm;
    private hammer;
    private elmWidth;
    private isInContainer;
    private restart;
    private stopEvent;
    private mostRightIndex;
    private doNext;
    private sub$;
    private prePanMove;
    dots: Array<number>;
    private nextListener;
    private prevListener;
    private onResize(event);
    constructor(platformId: Object, _renderer: Renderer2);
    ngAfterContentInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private initVariable();
    private setViewWidth(isInit?);
    private bindHammer();
    private bindClick();
    private callRestart();
    private callClick(positionX);
    private drawView(index);
    private playCycle(index);
    private handlePan(e);
    setIndex(index: number): void;
    private outOfBound(type);
    private runProgress(betweenTime);
    private getWindowWidthToNum();
}
